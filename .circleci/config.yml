version: 2.1
# https://circleci.com/docs/2.0/sample-config/
jobs:
  build:
    working_directory: ~/project #default
    docker:
      - image: circleci/python:3.7.8-stretch-node #use python 3.7
        environment:
          PIPENV_VENV_IN_PROJECT: enabled
      # - image: circleci/postgres:9.6.5-alpine-ram
      #   environment:
      #     POSTGRES_USER: ubuntu
      #     POSTGRES_DB: circle_test
      #     POSTGRES_PASSWORD: ''
    steps:
      - checkout
      - run: mkdir test-reports
      # - run:
      #     name: Download Selenium
      #     command: |
      #       curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      # - run:
      #     name: Start Selenium
      #     command: |
      #       java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
      #     background: true
      - restore_cache:
          # key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          key: deps2-{{ .Branch }}-{{ checksum "Pipfile" }}
      - run:
            name: Install Dependencies
            command: |
              python3 -m venv .env
              source .env/bin/activate
              pip install -r ./requirements.txt
      # - run:
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install -r requirements/dev.txt
      # - run:
      #     name: setup Heroku
      #     command: bash .circleci/setup-heroku.sh
      - save_cache:
          # key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          key: deps2-{{ .Branch }}-{{ checksum "Pipfile" }}
          paths:
            # - 'venv'
            - '.env'
      - run:
            name: Unit tests #remember to ACTIVATE venv in EACH STEP
            command: |
              source .env/bin/activate
              python -m pytest --cov=lutils --cov-report=xml --junitxml=test-reports/junit.xml
              python -m codecov --token=1aa8175d-dd1b-4608-9a44-867903349afe
      # - run:
      #     command: |
      #       . venv/bin/activate
      #       python manage.py test
      - store_artifacts:
          path: test-reports/
          # destination: tr1
      - store_test_results:
          path: test-reports/
      # - add_ssh_keys:
      #     fingerprints:
      #       - '48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4'
      # - deploy:
      #     name: Deploy Master to Heroku
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         git push heroku master
      #         heroku run python manage.py deploy
      #         heroku restart
      #       fi

# Orchestrate our job run sequence. Approval Job
# The build job runs, then the test job, then a hold job, with type: approval ensures the workflow waits for manual approval before the deploy job can run.
workflows:
  build_and_test:
    jobs:
      - build
      # - test:
      #     requires:
      #       - build
      # - hold:
      #     type: approval
      #     requires:
      #       - build
      #       - test
      # - deploy:
      #     requires:
      #       - hold